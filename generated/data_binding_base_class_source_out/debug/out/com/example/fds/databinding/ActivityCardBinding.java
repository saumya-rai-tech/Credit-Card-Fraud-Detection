// Generated by view binder compiler. Do not edit!
package com.example.fds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fds.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText cardno;

  @NonNull
  public final TextInputEditText cvv;

  @NonNull
  public final TextInputEditText expiry;

  @NonNull
  public final TextView loginTvForgotPassword;

  @NonNull
  public final TextInputEditText nameoncard;

  @NonNull
  public final TextView proceed;

  @NonNull
  public final TextView signup;

  private ActivityCardBinding(@NonNull ConstraintLayout rootView, @NonNull TextInputEditText cardno,
      @NonNull TextInputEditText cvv, @NonNull TextInputEditText expiry,
      @NonNull TextView loginTvForgotPassword, @NonNull TextInputEditText nameoncard,
      @NonNull TextView proceed, @NonNull TextView signup) {
    this.rootView = rootView;
    this.cardno = cardno;
    this.cvv = cvv;
    this.expiry = expiry;
    this.loginTvForgotPassword = loginTvForgotPassword;
    this.nameoncard = nameoncard;
    this.proceed = proceed;
    this.signup = signup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardno;
      TextInputEditText cardno = ViewBindings.findChildViewById(rootView, id);
      if (cardno == null) {
        break missingId;
      }

      id = R.id.cvv;
      TextInputEditText cvv = ViewBindings.findChildViewById(rootView, id);
      if (cvv == null) {
        break missingId;
      }

      id = R.id.expiry;
      TextInputEditText expiry = ViewBindings.findChildViewById(rootView, id);
      if (expiry == null) {
        break missingId;
      }

      id = R.id.login_tvForgotPassword;
      TextView loginTvForgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginTvForgotPassword == null) {
        break missingId;
      }

      id = R.id.nameoncard;
      TextInputEditText nameoncard = ViewBindings.findChildViewById(rootView, id);
      if (nameoncard == null) {
        break missingId;
      }

      id = R.id.proceed;
      TextView proceed = ViewBindings.findChildViewById(rootView, id);
      if (proceed == null) {
        break missingId;
      }

      id = R.id.signup;
      TextView signup = ViewBindings.findChildViewById(rootView, id);
      if (signup == null) {
        break missingId;
      }

      return new ActivityCardBinding((ConstraintLayout) rootView, cardno, cvv, expiry,
          loginTvForgotPassword, nameoncard, proceed, signup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
