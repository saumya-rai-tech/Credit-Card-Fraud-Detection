// Generated by view binder compiler. Do not edit!
package com.example.fds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fds.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText fname;

  @NonNull
  public final EditText lname;

  @NonNull
  public final EditText mobile;

  @NonNull
  public final EditText password;

  @NonNull
  public final Spinner spinnerMode;

  @NonNull
  public final TextView tvSubmit;

  private SignupBinding(@NonNull ScrollView rootView, @NonNull EditText email,
      @NonNull EditText fname, @NonNull EditText lname, @NonNull EditText mobile,
      @NonNull EditText password, @NonNull Spinner spinnerMode, @NonNull TextView tvSubmit) {
    this.rootView = rootView;
    this.email = email;
    this.fname = fname;
    this.lname = lname;
    this.mobile = mobile;
    this.password = password;
    this.spinnerMode = spinnerMode;
    this.tvSubmit = tvSubmit;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.fname;
      EditText fname = ViewBindings.findChildViewById(rootView, id);
      if (fname == null) {
        break missingId;
      }

      id = R.id.lname;
      EditText lname = ViewBindings.findChildViewById(rootView, id);
      if (lname == null) {
        break missingId;
      }

      id = R.id.mobile;
      EditText mobile = ViewBindings.findChildViewById(rootView, id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.spinner_mode;
      Spinner spinnerMode = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMode == null) {
        break missingId;
      }

      id = R.id.tv_submit;
      TextView tvSubmit = ViewBindings.findChildViewById(rootView, id);
      if (tvSubmit == null) {
        break missingId;
      }

      return new SignupBinding((ScrollView) rootView, email, fname, lname, mobile, password,
          spinnerMode, tvSubmit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
